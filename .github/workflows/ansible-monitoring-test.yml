name: Ansible Monitoring Test

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'ansible/**'
      - 'deployment_config.json'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'ansible/**'
      - 'deployment_config.json'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - development
          - validation
      auto_approve:
        description: 'Auto approve all prompts'
        required: false
        default: false
        type: boolean

env:
  ANSIBLE_HOST_KEY_CHECKING: false
  ANSIBLE_FORCE_COLOR: true
  ANSIBLE_SSH_ARGS: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

jobs:
  setup-ansible:
    name: Setup Ansible Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Ansible and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible boto3 pyyaml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Generate inventory
        working-directory: ./ansible
        run: |
          echo "Generating inventory..."
          python3 generate_inventory.py
          
          if [ -f "inventory/hosts.yml" ]; then
              echo "✓ Inventory generated successfully"
          else
              echo "::error::Failed to generate inventory"
              exit 1
          fi

  test-monitoring:
    name: Test Monitoring
    runs-on: ubuntu-latest
    needs: setup-ansible
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible boto3 pyyaml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Copy inventory and config
        run: |
          cp -r ansible/inventory ./
          cp -r ansible/group_vars ./

      - name: Test monitoring playbook
        working-directory: ./ansible
        run: |
          echo "Testing monitoring playbook..."
          ansible-playbook playbooks/wordpress_setup.yml --tags monitoring --check -i inventory/hosts.yml
          echo "✓ Monitoring playbook test completed"

      - name: Check monitoring script existence
        working-directory: ./ansible
        run: |
          echo "Checking monitoring script existence..."
          ansible wordpress -i inventory/hosts.yml -m stat -a "path=/usr/local/bin/check_wordpress.sh"
          echo "✓ Monitoring script check completed"

      - name: Check log directory
        working-directory: ./ansible
        run: |
          echo "Checking log directory..."
          ansible wordpress -i inventory/hosts.yml -m stat -a "path=/var/log/wordpress"
          echo "✓ Log directory check completed"

      - name: Test monitoring script execution
        working-directory: ./ansible
        run: |
          echo "Testing monitoring script execution..."
          ansible wordpress -i inventory/hosts.yml -m shell -a "/usr/local/bin/check_wordpress.sh"
          echo "✓ Monitoring script execution completed"

      - name: Check log files
        working-directory: ./ansible
        run: |
          echo "Checking log files..."
          ansible wordpress -i inventory/hosts.yml -m shell -a "tail -10 /var/log/wordpress/monitoring.log"
          echo "✓ Log files check completed"

      - name: Check system resources
        working-directory: ./ansible
        run: |
          echo "Checking system resources..."
          ansible wordpress -i inventory/hosts.yml -m shell -a "df -h"
          ansible wordpress -i inventory/hosts.yml -m shell -a "free -h"
          ansible wordpress -i inventory/hosts.yml -m shell -a "top -bn1 | head -5"
          echo "✓ System resources check completed"

  notify-completion:
    name: Notify Completion
    runs-on: ubuntu-latest
    needs: test-monitoring
    if: always()
    steps:
      - name: Notify success
        if: needs.test-monitoring.result == 'success'
        run: |
          echo "✅ Ansible monitoring test completed successfully"
          echo "Monitoring functionality is working properly"
          # TODO: Add Slack notification here if needed
          # curl -X POST -H 'Content-type: application/json' \
          #   --data '{"text":"✅ Ansible monitoring test completed successfully"}' \
          #   ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify failure
        if: needs.test-monitoring.result == 'failure'
        run: |
          echo "❌ Ansible monitoring test failed"
          echo "Please check the logs and take appropriate action"
          # TODO: Add Slack notification here if needed
          # curl -X POST -H 'Content-type: application/json' \
          #   --data '{"text":"❌ Ansible monitoring test failed"}' \
          #   ${{ secrets.SLACK_WEBHOOK_URL }}
