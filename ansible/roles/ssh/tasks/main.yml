---
# SSH設定タスク
- name: Ensure SSH service is enabled and running
  service:
    name: sshd
    state: started
    enabled: yes

- name: Create SSH key directory
  file:
    path: /tmp
    state: directory
    mode: '0755'

# SSH鍵の保存は無効化（ローカルに既に存在するため）
# - name: Save SSH private key
#   copy:
#     content: "{{ ssh_private_key }}"
#     dest: "{{ ssh_key_file_path | default('~/.ssh/ssh_key') }}"
#     mode: '0600'
#     owner: root
#     group: root
#   when: ssh_private_key is defined

- name: Create .ssh directory for {{ ssh_user }}
  file:
    path: /home/{{ ssh_user }}/.ssh
    state: directory
    mode: '0700'
    owner: "{{ ssh_user }}"
    group: "{{ ssh_user }}"

- name: Check if SSH public key file exists
  stat:
    path: "{{ ssh_public_key }}"
  register: ssh_public_key_file

- name: Set authorized_keys for {{ ssh_user }}
  authorized_key:
    user: "{{ ssh_user }}"
    state: present
    key: "{{ lookup('file', ssh_public_key) }}"
    manage_dir: no
  when: ssh_public_key_file.stat.exists

- name: Ensure correct permissions on authorized_keys
  file:
    path: /home/{{ ssh_user }}/.ssh/authorized_keys
    mode: '0600'
    owner: "{{ ssh_user }}"
    group: "{{ ssh_user }}"
  when: ssh_public_key_file.stat.exists

- name: Configure SSH daemon settings
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  loop:
    - { regexp: '^#?PubkeyAuthentication', line: 'PubkeyAuthentication {{ "yes" if ssh_pubkey_authentication else "no" }}' }
    - { regexp: '^#?AuthorizedKeysFile', line: 'AuthorizedKeysFile .ssh/authorized_keys' }
    - { regexp: '^#?PasswordAuthentication', line: 'PasswordAuthentication {{ "yes" if ssh_password_authentication else "no" }}' }
  notify: restart sshd

- name: Test SSH configuration
  command: sshd -t
  changed_when: false 