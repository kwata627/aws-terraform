---
# データベース接続設定タスク
- name: Install MariaDB client for Amazon Linux 2
  yum:
    name: mariadb105
    state: present
  become: yes
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "2"
  ignore_errors: yes

- name: Install MariaDB client for Amazon Linux 2023
  dnf:
    name: mariadb105
    state: present
  become: yes
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "2023"
  ignore_errors: yes

- name: Install MariaDB client (fallback)
  dnf:
    name: mariadb105
    state: present
  become: yes
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version is not defined
  ignore_errors: yes

- name: Verify MariaDB client installation
  command: mysql --version
  register: mariadb_version
  ignore_errors: yes

- name: Display MariaDB client version
  debug:
    msg: "MariaDB client version: {{ mariadb_version.stdout if mariadb_version is success and mariadb_version.stdout is defined else 'Not installed' }}"

- name: Install PyMySQL for Python 3
  pip:
    name: PyMySQL
    state: present
  become: yes
  ignore_errors: yes

- name: Create MySQL configuration directory
  file:
    path: /etc/mysql
    state: directory
    mode: '0755'
  become: yes

- name: Configure MySQL client
  template:
    src: mysql.conf.j2
    dest: /etc/mysql/mysql.conf
    mode: '0644'
  become: yes

- name: Extract RDS host and port
  set_fact:
    rds_host: "{{ (rds_endpoint | default('')).split(':')[0] }}"
    rds_port: "{{ (rds_endpoint | default('')).split(':')[1] | default('3306') }}"

- name: Test database connection
  mysql_query:
    login_db: "{{ wordpress_db_name }}"
    login_host: "{{ rds_host | default(wordpress_db_host) }}"
    login_port: "{{ rds_port | default('3306') }}"
    login_user: "{{ wordpress_db_user }}"
    login_password: "{{ wordpress_db_password }}"
    query: "SELECT 1"
  register: db_test
  ignore_errors: yes

- name: Display database connection status
  debug:
    msg: "Database connection: {{ 'SUCCESS' if db_test is success else 'FAILED' }}"
    verbosity: 1

- name: Display RDS connection details
  debug:
    msg: |
      RDS Endpoint: {{ rds_endpoint | default('Not set') }}
      Database Host: {{ wordpress_db_host | default('Not set') }}
      Database Name: {{ wordpress_db_name | default('Not set') }}
      Database User: {{ wordpress_db_user | default('Not set') }}
    verbosity: 1

- name: Create WordPress database user
  mysql_query:
    login_host: "{{ rds_host | default(wordpress_db_host) }}"
    login_port: "{{ rds_port | default('3306') }}"
    login_user: "{{ wp_admin_user | default('admin') }}"
    login_password: "{{ wp_admin_password | default('password') }}"
    query: "CREATE USER IF NOT EXISTS '{{ wordpress_db_user }}'@'%' IDENTIFIED BY '{{ wordpress_db_password }}';"
  become: yes
  ignore_errors: yes

- name: Grant privileges to WordPress database user
  mysql_query:
    login_host: "{{ rds_host | default(wordpress_db_host) }}"
    login_port: "{{ rds_port | default('3306') }}"
    login_user: "{{ wp_admin_user | default('admin') }}"
    login_password: "{{ wp_admin_password | default('password') }}"
    query: "GRANT ALL PRIVILEGES ON `{{ wordpress_db_name }}`.* TO '{{ wordpress_db_user }}'@'%';"
  become: yes
  ignore_errors: yes

- name: Flush privileges
  mysql_query:
    login_host: "{{ rds_host | default(wordpress_db_host) }}"
    login_port: "{{ rds_port | default('3306') }}"
    login_user: "{{ wp_admin_user | default('admin') }}"
    login_password: "{{ wp_admin_password | default('password') }}"
    query: "FLUSH PRIVILEGES;"
  become: yes
  ignore_errors: yes 