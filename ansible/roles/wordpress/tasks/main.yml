---
# WordPress設定タスク
- name: Create WordPress directory
  file:
    path: /var/www/html
    state: directory
    mode: '0755'
    owner: apache
    group: apache
  become: yes

# WP-CLIのインストール
- name: Download WP-CLI
  get_url:
    url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    dest: /tmp/wp-cli.phar
    mode: '0755'
    timeout: 300
  become: yes

- name: Install WP-CLI globally
  copy:
    src: /tmp/wp-cli.phar
    dest: /usr/local/bin/wp
    mode: '0755'
    remote_src: yes
  become: yes

- name: Clean up WP-CLI temporary file
  file:
    path: /tmp/wp-cli.phar
    state: absent
  become: yes

- name: Download Japanese WordPress
  get_url:
    url: https://ja.wordpress.org/latest-ja.tar.gz
    dest: /tmp/wordpress.tar.gz
    mode: '0644'
    timeout: 300
  become: yes

- name: Extract WordPress
  unarchive:
    src: /tmp/wordpress.tar.gz
    dest: /tmp/
    remote_src: yes
  become: yes

- name: Copy WordPress files to document root
  copy:
    src: /tmp/wordpress/
    dest: /var/www/html/
    remote_src: yes
    owner: apache
    group: apache
    mode: '0755'
  become: yes

- name: Set correct permissions for WordPress
  file:
    path: /var/www/html
    owner: apache
    group: apache
    recurse: yes
  become: yes

- name: Configure wp-config.php from template
  template:
    src: wp-config.php.j2
    dest: /var/www/html/wp-config.php
    owner: apache
    group: apache
    mode: '0644'
  become: yes
  notify: restart apache

- name: Update WordPress URLs in database if WordPress is installed
  mysql_query:
    login_db: "{{ wordpress_db_name }}"
    login_host: "{{ wordpress_db_host | regex_replace(':.*', '') }}"
    login_port: "{{ wordpress_db_host | regex_replace('.*:', '') | default('3306') }}"
    login_user: "{{ wordpress_db_user }}"
    login_password: "{{ wordpress_db_password }}"
    query: "UPDATE wp_options SET option_value = '{{ 'https' if wordpress_force_ssl | default(false) else 'http' }}://{{ wordpress_domain | default(cloudfront_domain | default(ansible_public_ipv4 | default('localhost'))) }}' WHERE option_name IN ('home', 'siteurl');"
  become: yes
  when: wordpress_db_name is defined and wordpress_db_host is defined
  ignore_errors: yes

- name: Clean up temporary files
  file:
    path: /tmp/wordpress.tar.gz
    state: absent
  become: yes

- name: Clean up temporary directory
  file:
    path: /tmp/wordpress
    state: absent
  become: yes

- name: Set WordPress language to Japanese
  lineinfile:
    path: /var/www/html/wp-config.php
    regexp: "define\\( 'WPLANG', '.*' \\);"
    line: "define( 'WPLANG', '{{ wordpress_locale | default('ja') }}' );"
    state: present
  become: yes
  notify: restart apache

- name: Create wp-content/languages directory
  file:
    path: /var/www/html/wp-content/languages
    state: directory
    mode: '0755'
    owner: apache
    group: apache
  become: yes

- name: Set correct permissions for languages directory
  file:
    path: /var/www/html/wp-content/languages
    owner: apache
    group: apache
    recurse: yes
  become: yes

# WordPress初期セットアップ（データベースが空の場合）
- name: Check if WordPress is installed
  mysql_query:
    login_db: "{{ wordpress_db_name }}"
    login_host: "{{ wordpress_db_host | regex_replace(':.*', '') }}"
    login_port: "{{ wordpress_db_host | regex_replace('.*:', '') | default('3306') }}"
    login_user: "{{ wordpress_db_user }}"
    login_password: "{{ wordpress_db_password }}"
    query: "SELECT COUNT(*) as count FROM information_schema.tables WHERE table_schema = '{{ wordpress_db_name }}' AND table_name LIKE 'wp_%';"
  register: wp_tables_check
  become: yes
  when: wordpress_db_name is defined and wordpress_db_host is defined
  ignore_errors: yes

- name: Install WordPress if not already installed
  shell: |
    cd /var/www/html
    wp core install \
      --url='http://{{ ansible_public_ipv4 | default(ansible_default_ipv4.address) }}' \
      --title='{{ wordpress_site_title | default("WordPress Site") }}' \
      --admin_user='{{ wordpress_admin_user | default("admin") }}' \
      --admin_password='{{ wordpress_admin_password | default("password") }}' \
      --admin_email='{{ wordpress_admin_email | default("admin@example.com") }}' \
      --skip-email \
      --allow-root
  become: yes
  when: 
    - wordpress_db_name is defined 
    - wordpress_db_host is defined
    - wp_tables_check is defined
    - wp_tables_check.query_result is defined
    - wp_tables_check.query_result[0].count | int == 0
  ignore_errors: yes 